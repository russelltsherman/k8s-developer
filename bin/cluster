#!/usr/bin/env bash

ACTION=${1:-"create"}
DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )
# set max cores to count of available cores
MAX_CORES=$(sysctl -n hw.ncpu)
# set max ram to 75% of available memory
MAX_RAM=$(( $(sysctl -n hw.memsize) / $((1024**3)) / 4 * 3 ))
PROFILE=$(basename $(git rev-parse --show-toplevel))
PROJECT_ROOT=$(git rev-parse --show-toplevel)

K8S_CTX=$PROFILE

# tell dns resolver to use minikube as nameserver for any .lo domains
function dnsresolver() {
  sudo rm /etc/resolver/minikube-$PROFILE

  cat << EOF | sudo tee -a /etc/resolver/minikube-$PROFILE
domain lo
nameserver $(minikube ip --profile=$PROFILE)
search_order 1
timeout 5
EOF
}

# extend minikube dns config to forward dns requests for .lo domain to minikube ip address
function dnsconfig() {
  cat <<EOF | kubectl apply --filename -
---
apiVersion: v1
data:
  Corefile: |
    .:53 {
        errors
        health {
           lameduck 5s
        }
        ready
        kubernetes cluster.local in-addr.arpa ip6.arpa {
           pods insecure
           fallthrough in-addr.arpa ip6.arpa
           ttl 30
        }
        prometheus :9153
        hosts {
           192.168.64.1 host.minikube.internal
           fallthrough
        }
        forward . /etc/resolv.conf {
           max_concurrent 1000
        }
        cache 30
        loop
        reload
        loadbalance
    }
    lo:53 {
        errors
        cache 30
        forward . $(minikube ip --profile=$PROFILE)
    }
kind: ConfigMap
metadata:
  name: coredns
  namespace: kube-system
EOF
}

case $ACTION in
  create)
    minikube start \
      --cpus="$MAX_CORES" \
      --disk-size='100g' \
      --driver='docker' \
      --kubernetes-version='1.30.0' \
      --memory="${MAX_RAM}g" \
      --mount true --mount-string='/Users:/host' \
      --nodes=1 \
      --profile="$PROFILE" \
      --addons=ingress,ingress-dns --install-addons=true

    # running multiple nodes can have issues with pv permissions
    # https://github.com/kubernetes/minikube/issues/12360

    dnsconfig
    dnsresolver

    # reload resolver config
    sudo killall -HUP mDNSResponder
    ;;

  delete|destroy|ip|pause|ssh|start|stop|tunnel|unpause)
    minikube "$ACTION" --profile="$PROFILE"
    ;;

  *)
    echo "unrecognied action"
    exit 0
    ;;
    
esac

